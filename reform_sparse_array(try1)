#include <stdio.h>
#include <stdlib.h>
#define SPARSE_COLNUM 4		// 희소행렬 열개수 입력

struct pack_one_row{
	int row;
	int column;
	int value;
};

void print_pack_array(struct pack_one_row *pack, int rownum);
int found_t(int arr[][SPARSE_COLNUM], int row, int column);

int main() {
	int arr[7][4] = { {0,0,0,9}, {0,1,0,0}, {0,0,0,0}, {0,0,7,0}, {0,0,0,0}, {3,0,0,0}, {0,0,0,0} };	// 희소행렬 입력부
	int arr_row = sizeof(arr) / sizeof(arr[0]);
	int arr_column = sizeof(arr[0]) / sizeof(int);		// = SPARSE_COLNUM으로 대체 가능
	int t = found_t(arr, arr_row, arr_column);

	struct pack_one_row* pack = (struct pack_one_row*)malloc((t + 1) * sizeof(struct pack_one_row));	// 구조체 포인터로 메모리 접근
	pack[0].row = arr_row;
	pack[0].column = arr_column;
	pack[0].value = t;

	int cnt = 0;
	for (int i = 0; i < 7; i++) {
		for (int j = 0; j < 4; j++) {
			if (arr[i][j] != 0) {
				cnt++;
				pack[cnt].row = i;		//arr[1] = *(arr+1)
				pack[cnt].column = j;
				pack[cnt].value = arr[i][j];
			}
		}
	}

	print_pack_array(pack, t+1);

	free(pack);		// 프로젝트 종료 전 동적 메모리 반납

	getchar();  return 0;
}

void print_pack_array(struct pack_one_row *pack, int rownum) {
	for (int i = 0; i < rownum; i++) {
		printf("%d %d %d\n", pack[i].row, pack[i].column, pack[i].value);
	}
}

int found_t(int arr[][SPARSE_COLNUM], int row, int column) {
	int cnt = 0;
	for (int i = 0; i < row; i++) {
		for (int j = 0; j < column; j++) {
			if (arr[i][j] != 0) cnt++;
		}
	}
	return  cnt;
}
